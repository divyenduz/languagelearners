name: Run Tests and Release
# This workflow is triggered on pushes to the repository.
on:
  push:
  workflow_dispatch:
    inputs:
      DO_RELEASE:
        description: 'Trigger release?'
        default: 'false'

env:
  NO_COLOR: true
  CI: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID_MYAPP: ${{ secrets.AWS_ACCESS_KEY_ID_MYAPP }}
  AWS_SECRET_ACCESS_KEY_MYAPP: ${{ secrets.AWS_SECRET_ACCESS_KEY_MYAPP }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  DB_URL: ${{ secrets.DB_URL }}

jobs:
  build:
    name: Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-hive/gha-yarn-cache@v1

      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Dependencies
        run: echo "Installing dependencies" && yarn install && echo "Done installing dependencies"

      - name: Run Tests
        run: yarn test # TODO: we aren't testing anything for real yet

      - name: Get Version and Status
        id: repo-state-pre
        run: |
          echo '::set-output name=VERSION::'$(cat package.json | jq '.version' | tr -d '\"')

      - name: Release
        if: endsWith(github.ref, '/master')
        run: yarn semantic-release

      - name: Get Version and Status
        id: repo-state
        run: |
          VERSION=$(cat package.json | jq '.version' | tr -d '\"')
          echo $VERSION
          echo '::set-output name=VERSION::'$VERSION
          DID_CHANGE=$([[ "${{ steps.repo-state-pre.outputs.VERSION }}" != "$VERSION" ]] && echo "true" || echo "false" )
          echo $DID_CHANGE
          echo '::set-output name=DID_CHANGE::'$DID_CHANGE

      - name: Debug
        run: |
          echo ${{ steps.repo-state.outputs.VERSION }}
          echo ${{ steps.repo-state.outputs.DID_CHANGE }}
          echo ${{ github.event.inputs.DO_RELEASE }}

      - name: Configure AWS credentials
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_MYAPP }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_MYAPP }}
          aws-region: ap-southeast-1

      - name: Setup kubectl
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG_DATA" | base64 --decode > ~/.kube/config

      - name: Install kubectl
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        uses: azure/setup-kubectl@v1

      - name: Login to Amazon ECR
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - uses: satackey/action-docker-layer-caching@v0.0.11
      #   continue-on-error: true

      - name: Build, tag, and push image to Amazon ECR
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lingoparrot
          IMAGE_TAG: ${{ steps.repo-state.outputs.VERSION }}
        # TODO: Test docker image before push
        run: |
          docker build -t lingoparrot .

          docker tag lingoparrot:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Disable latest for speed, do we really need latest?
          # docker tag lingoparrot:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Disable latest for speed, do we really need latest?
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest # Also push latest

      - name: Push
        uses: github-actions-x/commit@v2.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # push-branch: 'master'
          commit-message: '[skip ci] Publish ${{ steps.repo-state.outputs.VERSION }}'
          force-add: 'true'
          files: package.json
          name: Divyendu Singh (Bot)
          email: divyendu.z@gmail.com
          rebase: 'true'

      # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
      - name: Deploy New Version [Catch all, mainly for environment, later addition]
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        run: kubectl apply -f ./k8s

      # https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
      - name: Deploy New Version [Set exact image version]
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        run: kubectl set image deployment/lingoparrot lingoparrot=297907245068.dkr.ecr.ap-southeast-1.amazonaws.com/lingoparrot:${{ steps.repo-state.outputs.VERSION }} --record

      - name: Verify Deployment
        if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
        run: kubectl rollout status deployment/lingoparrot

      # - name: Migrate Database
      #   if: ${{ steps.repo-state.outputs.DID_CHANGE == 'true' || github.event.inputs.DO_RELEASE == 'true' }}
      #   run: yarn prisma migrate deploy
